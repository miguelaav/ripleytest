{"ast":null,"code":"var _jsxFileName = \"/Users/miguelacevedo/Projects/ripleytest/ripleyapp/src/ApiCall/ApiCall.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass ApiCall extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temperature: null,\n      time: null,\n      zone: null\n    };\n  }\n\n  async loadConstruction(id) {\n    const results = (await axios.get('http://localhost:8081/' + id)).data;\n    this.setState({\n      temperature: results.body.currently.temperature,\n      time: this.timeConverter(results.body.currently.time),\n      zone: results.body.timezone\n    });\n  }\n\n  timeConverter(UNIX_timestamp) {\n    var a = new Date(UNIX_timestamp * 1000);\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var hour = a.getHours();\n    var min = a.getMinutes();\n    var sec = a.getSeconds();\n    var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\n    return time;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.match.params.id !== this.props.match.params.id) {\n      const id = nextProps.match.params.id;\n      this.loadConstruction(id);\n    }\n  }\n\n  componentDidMount() {\n    const params = this.props.match.params;\n    console.log(params.id);\n    const ids = params.id;\n    this.loadConstruction(ids);\n    /*\n    const results = (await axios.get('http://localhost:8081/'+ids)).data;\n    this.setState({\n        temperature : results.body.currently.temperature,\n        time : results.body.currently.time,\n        zone : results.body.timezone,\n    });\n    */\n\n    console.log(this.state.results);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.results === null && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Please first select a country zone...\"), React.createElement(\"div\", {\n      className: \"card text-white bg-success mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Temperatura y hora\"), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.zone), React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.temperature, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), this.state.time, \"   \")))));\n  }\n\n}\n\nexport default ApiCall;","map":{"version":3,"sources":["/Users/miguelacevedo/Projects/ripleytest/ripleyapp/src/ApiCall/ApiCall.js"],"names":["React","Component","Link","axios","ApiCall","constructor","props","state","temperature","time","zone","loadConstruction","id","results","get","data","setState","body","currently","timeConverter","timezone","UNIX_timestamp","a","Date","months","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","componentWillReceiveProps","nextProps","match","params","componentDidMount","console","log","ids","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\n\nclass ApiCall extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      temperature: null,\n      time:null,\n      zone:null,\n    };\n  }\n\n  async loadConstruction( id ) {\n    const results = (await axios.get('http://localhost:8081/'+id)).data;\n    this.setState({\n        temperature : results.body.currently.temperature,\n        time : this.timeConverter(results.body.currently.time),\n        zone : results.body.timezone,\n    });\n  }\n\n  timeConverter(UNIX_timestamp){\n    var a = new Date(UNIX_timestamp * 1000);\n    var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var hour = a.getHours();\n    var min = a.getMinutes();\n    var sec = a.getSeconds();\n    var time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\n    return time;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.match.params.id !== this.props.match.params.id) {\n      const id = nextProps.match.params.id\n      this.loadConstruction( id );\n    }\n  }\n\n  componentDidMount() {\n    const { match: { params } } = this.props;\n    console.log(params.id)\n    const ids = params.id;\n    this.loadConstruction(ids)\n    /*\n    const results = (await axios.get('http://localhost:8081/'+ids)).data;\n    this.setState({\n        temperature : results.body.currently.temperature,\n        time : results.body.currently.time,\n        zone : results.body.timezone,\n    });\n    */\n    console.log(this.state.results);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n    \n        {this.state.results === null && <p>Please first select a country zone...</p>}\n        <div className=\"card text-white bg-success mb-3\">\n          <div className=\"card-header\">Temperatura y hora</div>\n          <div className=\"card-body\">\n              <h4 className=\"card-title\">{this.state.zone}</h4>\n              <p className=\"card-text\">{this.state.temperature} <br></br>\n                                        {this.state.time}   </p>\n            \n            </div>\n            \n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  \n}\n\n\n\n\nexport default ApiCall;"]},"metadata":{},"sourceType":"module"}